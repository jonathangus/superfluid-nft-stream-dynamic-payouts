/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  LibAddressManager,
  LibAddressManagerInterface,
} from "../LibAddressManager";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_newAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_oldAddress",
        type: "address",
      },
    ],
    name: "AddressSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
    ],
    name: "getAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "setAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6109128061010d6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063715018a61461005c5780638da5cb5b146100665780639b2ea4bd14610084578063bf40fac1146100a0578063f2fde38b146100d0575b600080fd5b6100646100ec565b005b61006e610100565b60405161007b91906104a0565b60405180910390f35b61009e60048036038101906100999190610641565b610129565b005b6100ba60048036038101906100b5919061069d565b61021d565b6040516100c791906104a0565b60405180910390f35b6100ea60048036038101906100e591906106e6565b610262565b005b6100f46102e5565b6100fe6000610363565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6101316102e5565b600061013c83610427565b905060006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050826001600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550836040516101d6919061078d565b60405180910390207f9416a153a346f93d95f94b064ae3f148b6460473c6e82b3f9fc2521b873fcd6c848360405161020f9291906107a4565b60405180910390a250505050565b60006001600061022c84610427565b815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b61026a6102e5565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036102d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102d090610850565b60405180910390fd5b6102e281610363565b50565b6102ed610457565b73ffffffffffffffffffffffffffffffffffffffff1661030b610100565b73ffffffffffffffffffffffffffffffffffffffff1614610361576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610358906108bc565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008160405160200161043a919061078d565b604051602081830303815290604052805190602001209050919050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061048a8261045f565b9050919050565b61049a8161047f565b82525050565b60006020820190506104b56000830184610491565b92915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610522826104d9565b810181811067ffffffffffffffff82111715610541576105406104ea565b5b80604052505050565b60006105546104bb565b90506105608282610519565b919050565b600067ffffffffffffffff8211156105805761057f6104ea565b5b610589826104d9565b9050602081019050919050565b82818337600083830152505050565b60006105b86105b384610565565b61054a565b9050828152602081018484840111156105d4576105d36104d4565b5b6105df848285610596565b509392505050565b600082601f8301126105fc576105fb6104cf565b5b813561060c8482602086016105a5565b91505092915050565b61061e8161047f565b811461062957600080fd5b50565b60008135905061063b81610615565b92915050565b60008060408385031215610658576106576104c5565b5b600083013567ffffffffffffffff811115610676576106756104ca565b5b610682858286016105e7565b92505060206106938582860161062c565b9150509250929050565b6000602082840312156106b3576106b26104c5565b5b600082013567ffffffffffffffff8111156106d1576106d06104ca565b5b6106dd848285016105e7565b91505092915050565b6000602082840312156106fc576106fb6104c5565b5b600061070a8482850161062c565b91505092915050565b600081519050919050565b600081905092915050565b60005b8381101561074757808201518184015260208101905061072c565b83811115610756576000848401525b50505050565b600061076782610713565b610771818561071e565b9350610781818560208601610729565b80840191505092915050565b6000610799828461075c565b915081905092915050565b60006040820190506107b96000830185610491565b6107c66020830184610491565b9392505050565b600082825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061083a6026836107cd565b9150610845826107de565b604082019050919050565b600060208201905081810360008301526108698161082d565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006108a66020836107cd565b91506108b182610870565b602082019050919050565b600060208201905081810360008301526108d581610899565b905091905056fea2646970667358221220157fa603dff23ae911717ac34d162bc4b049345f05c9525c49f80fe497a28a6c64736f6c634300080e0033";

type LibAddressManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LibAddressManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LibAddressManager__factory extends ContractFactory {
  constructor(...args: LibAddressManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "LibAddressManager";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<LibAddressManager> {
    return super.deploy(overrides || {}) as Promise<LibAddressManager>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): LibAddressManager {
    return super.attach(address) as LibAddressManager;
  }
  connect(signer: Signer): LibAddressManager__factory {
    return super.connect(signer) as LibAddressManager__factory;
  }
  static readonly contractName: "LibAddressManager";
  public readonly contractName: "LibAddressManager";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LibAddressManagerInterface {
    return new utils.Interface(_abi) as LibAddressManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LibAddressManager {
    return new Contract(address, _abi, signerOrProvider) as LibAddressManager;
  }
}
